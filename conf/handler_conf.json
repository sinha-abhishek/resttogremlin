{
  "handlers": {
    "add_user": {
      "query": "v1=g.V().has('number', XNUM);if (v1.toList().size() == 0) {println('create vertex '+ XNUM );v = graph.addVertex('user');v.property('number',XNUM);v.property('uid',XUID);}else {println('found v');v = g.V().has('number', XNUM).next();v.property('uid',XUID);g.V(v).inE('contact').property('has_app', true) }",
      "bindings": {
        "XNUM": "number",
        "XUID": "uid"
      }
    },
    "get_contacts": {
      "query": "g.V().has('uid',XUID).outE('contact').as('ce').inV().as('inv').select('ce','inv').select('ce').valueMap().as('e').select('inv').valueMap().as('v').select('e','v')",
      "bindings": {
        "XUID": "uid"
      }
    },
    "add_contact": {
      "query": "v = g.V().has('number', XNUM1).next();\r\nv2 = g.V().has('number', XNUM2).hasNext();\r\nv1 =null;\r\nhasApp = false;\r\nif (v2 == false) {\r\n  hasApp = false;\r\n  println('create vertex '+ XNUM2 );\r\n   v1 = graph.addVertex('user');\r\n   v1.property('number',XNUM2);\r\n   v1.property('uid',-1);\r\n} else {\r\n   hasApp = g.V().has('number', XNUM2).values('uid') != -1 ;\r\n   v1 = g.V().has('number', XNUM2).next();\r\n}\r\ne = null;\r\nif (g.V().has('number',XNUM1).outE('contact').inV().has('number', XNUM2).hasNext()) {\r\n  e = g.V().has('number',XNUM1).outE('contact').inV().has('number',XNUM2).toE(Direction.IN).next();\r\n} else {\r\n  e = v.addEdge('contact', v1);\r\n}\r\ne.property('knw_as', XNAME);\r\ne.property('has_app', hasApp);\r\n",
      "bindings": {
        "XNUM1": "number1",
        "XNUM2": "number2",
        "XNAME": "contact_name"
      }
    }
  }
}
